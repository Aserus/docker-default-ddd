worker_processes  1;
load_module modules/ngx_http_js_module.so;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    js_import /etc/nginx/conf.d/oauth2.js; 

    map $http_x_forwarded_proto $the_scheme {
     default $http_x_forwarded_proto;
     "" $scheme;
    }

    map $http_x_forwarded_host $the_host {
        default $http_x_forwarded_host;
        "" $host;
    }
    map $http_upgrade $proxy_connection {
        default upgrade;
        "" close;
    }

    server {
        listen 80;
        server_name _;

        # types {
        #     application/javascript js;
        # }

        root /var/www;
        index index.html;
    
        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/v1/auth {
            auth_request off;
            proxy_set_header Host $host;
            proxy_pass http://ms.auth:3000;
        }

        location /api/v1 {
            auth_request /_oauth2_token_introspection;
            error_page 403 /403.json;
            error_page 401 /401.json;
            error_page 500 /401.json;
            error_page 404 /404.json;


            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $the_scheme;
            proxy_set_header Host $the_host;

            # proxy_pass http://ms.mainapi:3000;

            # location ~ otherapi {
            #     proxy_pass http://ms.otherapi:3000;
            # }
        }

        location /404.json {
            return 404 '{"error": "Requested resource not found"}';
        }

        location /401.json {
            return 401 '{"error": "Unauthenticated"}';
        }

        location /403.json {
            return 403 '{"error": "Forbidden"}';
        }

        location = /_oauth2_token_introspection {
            include /etc/nginx/cors.part.conf;
            internal;
            js_content oauth2.introspectAccessToken;   
        }

        location /_oauth2_send_request {
            internal;
            proxy_method      GET;
            proxy_set_header Host $host;
            proxy_set_header  Authorization $http_authorization;
            proxy_pass_header Authorization;
            proxy_pass        http://ms.auth:3000/api/v1/auth/token-introspection;
            proxy_set_header Content-Length "";

            proxy_ignore_headers  Cache-Control Expires Set-Cookie;
        }
    }
}




# 	# END